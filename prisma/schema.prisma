// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @db.VarChar(255)

  createdAt     DateTime        @default(now())
  proposals     Proposal[]
  Daos          Dao[]
  UserDaoFollow UserDaoFollow[]
  Wallet        Wallet[]
}

model Wallet {
  id      Int     @id @default(autoincrement())
  userId  String
  address String
  ens     String? @db.VarChar(255)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Dao {
  id            Int    @id @default(autoincrement())
  snapshotId    String @unique
  name          String
  logo          String
  overview      String
  tokenOverview String

  createdAt     DateTime        @default(now())
  Proposal      Proposal[]
  Token         Token[]
  users         User[]
  UserDaoFollow UserDaoFollow[]
}

model Proposal {
  id                Int      @id @default(autoincrement())
  snapshotId        String   @unique
  title             String
  daoId             Int
  juniorDescription String?
  middleDescription String?
  seniorDescription String
  startAt           DateTime
  endAt             DateTime
  author            String
  snapshotLink      String
  discussionLink    String?
  issueNumber       Int?     @unique

  createdAt DateTime @default(now())
  dao       Dao      @relation(fields: [daoId], references: [id], onDelete: Cascade)
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.VarChar(255)
}

model Token {
  id    String  @id @db.VarChar(255)
  name  String?
  dao   Dao     @relation(fields: [daoId], references: [id], onDelete: Cascade)
  daoId Int
  main  Boolean @default(false)

  createdAt DateTime @default(now())
}

model UserDaoFollow {
  dao    Dao    @relation(fields: [daoId], references: [id], onDelete: Cascade)
  daoId  Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  createdAt DateTime @default(now())
  @@id([daoId, userId])
}
